/*
 * Nchf_ConvergedCharging
 * ConvergedCharging Service Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.0.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.frojasg1.nchf5g.rel15.openapi.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ChargingDataRequest
 */
@JsonPropertyOrder({
  ChargingDataRequest.JSON_PROPERTY_SUBSCRIBER_IDENTIFIER,
  ChargingDataRequest.JSON_PROPERTY_NF_CONSUMER_IDENTIFICATION,
  ChargingDataRequest.JSON_PROPERTY_CHARGING_ID,
  ChargingDataRequest.JSON_PROPERTY_INVOCATION_TIME_STAMP,
  ChargingDataRequest.JSON_PROPERTY_INVOCATION_SEQUENCE_NUMBER,
  ChargingDataRequest.JSON_PROPERTY_ONE_TIME_EVENT,
  ChargingDataRequest.JSON_PROPERTY_ONE_TIME_EVENT_TYPE,
  ChargingDataRequest.JSON_PROPERTY_NOTIFY_URI,
  ChargingDataRequest.JSON_PROPERTY_SERVICE_SPECIFICATION_INFO,
  ChargingDataRequest.JSON_PROPERTY_MULTIPLE_UNIT_USAGE,
  ChargingDataRequest.JSON_PROPERTY_TRIGGERS,
  ChargingDataRequest.JSON_PROPERTY_P_D_U_SESSION_CHARGING_INFORMATION,
  ChargingDataRequest.JSON_PROPERTY_ROAMING_Q_B_C_INFORMATION,
  ChargingDataRequest.JSON_PROPERTY_S_M_S_CHARGING_INFORMATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2024-09-17T08:24:27.361349500+02:00[Europe/Madrid]", comments = "Generator version: 7.7.0")
public class ChargingDataRequest   {
  public static final String JSON_PROPERTY_SUBSCRIBER_IDENTIFIER = "subscriberIdentifier";
  @JsonProperty(JSON_PROPERTY_SUBSCRIBER_IDENTIFIER)
  private String subscriberIdentifier;

  public static final String JSON_PROPERTY_NF_CONSUMER_IDENTIFICATION = "nfConsumerIdentification";
  @JsonProperty(JSON_PROPERTY_NF_CONSUMER_IDENTIFICATION)
  private NFIdentification nfConsumerIdentification;

  public static final String JSON_PROPERTY_CHARGING_ID = "chargingId";
  @JsonProperty(JSON_PROPERTY_CHARGING_ID)
  private Integer chargingId;

  public static final String JSON_PROPERTY_INVOCATION_TIME_STAMP = "invocationTimeStamp";
  @JsonProperty(JSON_PROPERTY_INVOCATION_TIME_STAMP)
  private Date invocationTimeStamp;

  public static final String JSON_PROPERTY_INVOCATION_SEQUENCE_NUMBER = "invocationSequenceNumber";
  @JsonProperty(JSON_PROPERTY_INVOCATION_SEQUENCE_NUMBER)
  private Integer invocationSequenceNumber;

  public static final String JSON_PROPERTY_ONE_TIME_EVENT = "oneTimeEvent";
  @JsonProperty(JSON_PROPERTY_ONE_TIME_EVENT)
  private Boolean oneTimeEvent;

  public static final String JSON_PROPERTY_ONE_TIME_EVENT_TYPE = "oneTimeEventType";
  @JsonProperty(JSON_PROPERTY_ONE_TIME_EVENT_TYPE)
  private OneTimeEventType oneTimeEventType;

  public static final String JSON_PROPERTY_NOTIFY_URI = "notifyUri";
  @JsonProperty(JSON_PROPERTY_NOTIFY_URI)
  private String notifyUri;

  public static final String JSON_PROPERTY_SERVICE_SPECIFICATION_INFO = "serviceSpecificationInfo";
  @JsonProperty(JSON_PROPERTY_SERVICE_SPECIFICATION_INFO)
  private String serviceSpecificationInfo;

  public static final String JSON_PROPERTY_MULTIPLE_UNIT_USAGE = "multipleUnitUsage";
  @JsonProperty(JSON_PROPERTY_MULTIPLE_UNIT_USAGE)
  private List<@Valid MultipleUnitUsage> multipleUnitUsage;

  public static final String JSON_PROPERTY_TRIGGERS = "triggers";
  @JsonProperty(JSON_PROPERTY_TRIGGERS)
  private List<@Valid Trigger> triggers;

  public static final String JSON_PROPERTY_P_D_U_SESSION_CHARGING_INFORMATION = "pDUSessionChargingInformation";
  @JsonProperty(JSON_PROPERTY_P_D_U_SESSION_CHARGING_INFORMATION)
  private PDUSessionChargingInformation pDUSessionChargingInformation;

  public static final String JSON_PROPERTY_ROAMING_Q_B_C_INFORMATION = "roamingQBCInformation";
  @JsonProperty(JSON_PROPERTY_ROAMING_Q_B_C_INFORMATION)
  private RoamingQBCInformation roamingQBCInformation;

  public static final String JSON_PROPERTY_S_M_S_CHARGING_INFORMATION = "sMSChargingInformation";
  @JsonProperty(JSON_PROPERTY_S_M_S_CHARGING_INFORMATION)
  private SMSChargingInformation sMSChargingInformation;

  public ChargingDataRequest subscriberIdentifier(String subscriberIdentifier) {
    this.subscriberIdentifier = subscriberIdentifier;
    return this;
  }

  /**
   * Get subscriberIdentifier
   * @return subscriberIdentifier
   **/
  @JsonProperty(value = "subscriberIdentifier")
  @ApiModelProperty(value = "")
   @Pattern(regexp="^(imsi-[0-9]{5,15}|nai-.+|.+)$")
  public String getSubscriberIdentifier() {
    return subscriberIdentifier;
  }

  public void setSubscriberIdentifier(String subscriberIdentifier) {
    this.subscriberIdentifier = subscriberIdentifier;
  }

  public ChargingDataRequest nfConsumerIdentification(NFIdentification nfConsumerIdentification) {
    this.nfConsumerIdentification = nfConsumerIdentification;
    return this;
  }

  /**
   * Get nfConsumerIdentification
   * @return nfConsumerIdentification
   **/
  @JsonProperty(value = "nfConsumerIdentification")
  @ApiModelProperty(value = "")
  @Valid 
  public NFIdentification getNfConsumerIdentification() {
    return nfConsumerIdentification;
  }

  public void setNfConsumerIdentification(NFIdentification nfConsumerIdentification) {
    this.nfConsumerIdentification = nfConsumerIdentification;
  }

  public ChargingDataRequest chargingId(Integer chargingId) {
    this.chargingId = chargingId;
    return this;
  }

  /**
   * Get chargingId
   * minimum: 0
   * @return chargingId
   **/
  @JsonProperty(value = "chargingId")
  @ApiModelProperty(value = "")
   @Min(0)
  public Integer getChargingId() {
    return chargingId;
  }

  public void setChargingId(Integer chargingId) {
    this.chargingId = chargingId;
  }

  public ChargingDataRequest invocationTimeStamp(Date invocationTimeStamp) {
    this.invocationTimeStamp = invocationTimeStamp;
    return this;
  }

  /**
   * Get invocationTimeStamp
   * @return invocationTimeStamp
   **/
  @JsonProperty(value = "invocationTimeStamp")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public Date getInvocationTimeStamp() {
    return invocationTimeStamp;
  }

  public void setInvocationTimeStamp(Date invocationTimeStamp) {
    this.invocationTimeStamp = invocationTimeStamp;
  }

  public ChargingDataRequest invocationSequenceNumber(Integer invocationSequenceNumber) {
    this.invocationSequenceNumber = invocationSequenceNumber;
    return this;
  }

  /**
   * Get invocationSequenceNumber
   * minimum: 0
   * @return invocationSequenceNumber
   **/
  @JsonProperty(value = "invocationSequenceNumber")
  @ApiModelProperty(required = true, value = "")
  @NotNull  @Min(0)
  public Integer getInvocationSequenceNumber() {
    return invocationSequenceNumber;
  }

  public void setInvocationSequenceNumber(Integer invocationSequenceNumber) {
    this.invocationSequenceNumber = invocationSequenceNumber;
  }

  public ChargingDataRequest oneTimeEvent(Boolean oneTimeEvent) {
    this.oneTimeEvent = oneTimeEvent;
    return this;
  }

  /**
   * Get oneTimeEvent
   * @return oneTimeEvent
   **/
  @JsonProperty(value = "oneTimeEvent")
  @ApiModelProperty(value = "")
  
  public Boolean getOneTimeEvent() {
    return oneTimeEvent;
  }

  public void setOneTimeEvent(Boolean oneTimeEvent) {
    this.oneTimeEvent = oneTimeEvent;
  }

  public ChargingDataRequest oneTimeEventType(OneTimeEventType oneTimeEventType) {
    this.oneTimeEventType = oneTimeEventType;
    return this;
  }

  /**
   * Get oneTimeEventType
   * @return oneTimeEventType
   **/
  @JsonProperty(value = "oneTimeEventType")
  @ApiModelProperty(value = "")
  
  public OneTimeEventType getOneTimeEventType() {
    return oneTimeEventType;
  }

  public void setOneTimeEventType(OneTimeEventType oneTimeEventType) {
    this.oneTimeEventType = oneTimeEventType;
  }

  public ChargingDataRequest notifyUri(String notifyUri) {
    this.notifyUri = notifyUri;
    return this;
  }

  /**
   * Get notifyUri
   * @return notifyUri
   **/
  @JsonProperty(value = "notifyUri")
  @ApiModelProperty(value = "")
  
  public String getNotifyUri() {
    return notifyUri;
  }

  public void setNotifyUri(String notifyUri) {
    this.notifyUri = notifyUri;
  }

  public ChargingDataRequest serviceSpecificationInfo(String serviceSpecificationInfo) {
    this.serviceSpecificationInfo = serviceSpecificationInfo;
    return this;
  }

  /**
   * Get serviceSpecificationInfo
   * @return serviceSpecificationInfo
   **/
  @JsonProperty(value = "serviceSpecificationInfo")
  @ApiModelProperty(value = "")
  
  public String getServiceSpecificationInfo() {
    return serviceSpecificationInfo;
  }

  public void setServiceSpecificationInfo(String serviceSpecificationInfo) {
    this.serviceSpecificationInfo = serviceSpecificationInfo;
  }

  public ChargingDataRequest multipleUnitUsage(List<@Valid MultipleUnitUsage> multipleUnitUsage) {
    this.multipleUnitUsage = multipleUnitUsage;
    return this;
  }

  public ChargingDataRequest addMultipleUnitUsageItem(MultipleUnitUsage multipleUnitUsageItem) {
    if (this.multipleUnitUsage == null) {
      this.multipleUnitUsage = new ArrayList<>();
    }
    this.multipleUnitUsage.add(multipleUnitUsageItem);
    return this;
  }

  /**
   * Get multipleUnitUsage
   * @return multipleUnitUsage
   **/
  @JsonProperty(value = "multipleUnitUsage")
  @ApiModelProperty(value = "")
  @Valid  @Size(min=0)
  public List<@Valid MultipleUnitUsage> getMultipleUnitUsage() {
    return multipleUnitUsage;
  }

  public void setMultipleUnitUsage(List<@Valid MultipleUnitUsage> multipleUnitUsage) {
    this.multipleUnitUsage = multipleUnitUsage;
  }

  public ChargingDataRequest triggers(List<@Valid Trigger> triggers) {
    this.triggers = triggers;
    return this;
  }

  public ChargingDataRequest addTriggersItem(Trigger triggersItem) {
    if (this.triggers == null) {
      this.triggers = new ArrayList<>();
    }
    this.triggers.add(triggersItem);
    return this;
  }

  /**
   * Get triggers
   * @return triggers
   **/
  @JsonProperty(value = "triggers")
  @ApiModelProperty(value = "")
  @Valid  @Size(min=0)
  public List<@Valid Trigger> getTriggers() {
    return triggers;
  }

  public void setTriggers(List<@Valid Trigger> triggers) {
    this.triggers = triggers;
  }

  public ChargingDataRequest pDUSessionChargingInformation(PDUSessionChargingInformation pDUSessionChargingInformation) {
    this.pDUSessionChargingInformation = pDUSessionChargingInformation;
    return this;
  }

  /**
   * Get pDUSessionChargingInformation
   * @return pDUSessionChargingInformation
   **/
  @JsonProperty(value = "pDUSessionChargingInformation")
  @ApiModelProperty(value = "")
  @Valid 
  public PDUSessionChargingInformation getpDUSessionChargingInformation() {
    return pDUSessionChargingInformation;
  }

  public void setpDUSessionChargingInformation(PDUSessionChargingInformation pDUSessionChargingInformation) {
    this.pDUSessionChargingInformation = pDUSessionChargingInformation;
  }

  public ChargingDataRequest roamingQBCInformation(RoamingQBCInformation roamingQBCInformation) {
    this.roamingQBCInformation = roamingQBCInformation;
    return this;
  }

  /**
   * Get roamingQBCInformation
   * @return roamingQBCInformation
   **/
  @JsonProperty(value = "roamingQBCInformation")
  @ApiModelProperty(value = "")
  @Valid 
  public RoamingQBCInformation getRoamingQBCInformation() {
    return roamingQBCInformation;
  }

  public void setRoamingQBCInformation(RoamingQBCInformation roamingQBCInformation) {
    this.roamingQBCInformation = roamingQBCInformation;
  }

  public ChargingDataRequest sMSChargingInformation(SMSChargingInformation sMSChargingInformation) {
    this.sMSChargingInformation = sMSChargingInformation;
    return this;
  }

  /**
   * Get sMSChargingInformation
   * @return sMSChargingInformation
   **/
  @JsonProperty(value = "sMSChargingInformation")
  @ApiModelProperty(value = "")
  @Valid 
  public SMSChargingInformation getsMSChargingInformation() {
    return sMSChargingInformation;
  }

  public void setsMSChargingInformation(SMSChargingInformation sMSChargingInformation) {
    this.sMSChargingInformation = sMSChargingInformation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChargingDataRequest chargingDataRequest = (ChargingDataRequest) o;
    return Objects.equals(this.subscriberIdentifier, chargingDataRequest.subscriberIdentifier) &&
        Objects.equals(this.nfConsumerIdentification, chargingDataRequest.nfConsumerIdentification) &&
        Objects.equals(this.chargingId, chargingDataRequest.chargingId) &&
        Objects.equals(this.invocationTimeStamp, chargingDataRequest.invocationTimeStamp) &&
        Objects.equals(this.invocationSequenceNumber, chargingDataRequest.invocationSequenceNumber) &&
        Objects.equals(this.oneTimeEvent, chargingDataRequest.oneTimeEvent) &&
        Objects.equals(this.oneTimeEventType, chargingDataRequest.oneTimeEventType) &&
        Objects.equals(this.notifyUri, chargingDataRequest.notifyUri) &&
        Objects.equals(this.serviceSpecificationInfo, chargingDataRequest.serviceSpecificationInfo) &&
        Objects.equals(this.multipleUnitUsage, chargingDataRequest.multipleUnitUsage) &&
        Objects.equals(this.triggers, chargingDataRequest.triggers) &&
        Objects.equals(this.pDUSessionChargingInformation, chargingDataRequest.pDUSessionChargingInformation) &&
        Objects.equals(this.roamingQBCInformation, chargingDataRequest.roamingQBCInformation) &&
        Objects.equals(this.sMSChargingInformation, chargingDataRequest.sMSChargingInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subscriberIdentifier, nfConsumerIdentification, chargingId, invocationTimeStamp, invocationSequenceNumber, oneTimeEvent, oneTimeEventType, notifyUri, serviceSpecificationInfo, multipleUnitUsage, triggers, pDUSessionChargingInformation, roamingQBCInformation, sMSChargingInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChargingDataRequest {\n");
    
    sb.append("    subscriberIdentifier: ").append(toIndentedString(subscriberIdentifier)).append("\n");
    sb.append("    nfConsumerIdentification: ").append(toIndentedString(nfConsumerIdentification)).append("\n");
    sb.append("    chargingId: ").append(toIndentedString(chargingId)).append("\n");
    sb.append("    invocationTimeStamp: ").append(toIndentedString(invocationTimeStamp)).append("\n");
    sb.append("    invocationSequenceNumber: ").append(toIndentedString(invocationSequenceNumber)).append("\n");
    sb.append("    oneTimeEvent: ").append(toIndentedString(oneTimeEvent)).append("\n");
    sb.append("    oneTimeEventType: ").append(toIndentedString(oneTimeEventType)).append("\n");
    sb.append("    notifyUri: ").append(toIndentedString(notifyUri)).append("\n");
    sb.append("    serviceSpecificationInfo: ").append(toIndentedString(serviceSpecificationInfo)).append("\n");
    sb.append("    multipleUnitUsage: ").append(toIndentedString(multipleUnitUsage)).append("\n");
    sb.append("    triggers: ").append(toIndentedString(triggers)).append("\n");
    sb.append("    pDUSessionChargingInformation: ").append(toIndentedString(pDUSessionChargingInformation)).append("\n");
    sb.append("    roamingQBCInformation: ").append(toIndentedString(roamingQBCInformation)).append("\n");
    sb.append("    sMSChargingInformation: ").append(toIndentedString(sMSChargingInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

