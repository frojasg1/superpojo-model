/*
 * Nchf_ConvergedCharging
 * ConvergedCharging Service Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.0.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.frojasg1.nchf5g.rel15.openapi.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * EutraLocation
 */
@JsonPropertyOrder({
  EutraLocation.JSON_PROPERTY_TAI,
  EutraLocation.JSON_PROPERTY_ECGI,
  EutraLocation.JSON_PROPERTY_AGE_OF_LOCATION_INFORMATION,
  EutraLocation.JSON_PROPERTY_UE_LOCATION_TIMESTAMP,
  EutraLocation.JSON_PROPERTY_GEOGRAPHICAL_INFORMATION,
  EutraLocation.JSON_PROPERTY_GEODETIC_INFORMATION,
  EutraLocation.JSON_PROPERTY_GLOBAL_NGENB_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2024-09-17T08:24:27.361349500+02:00[Europe/Madrid]", comments = "Generator version: 7.7.0")
public class EutraLocation   {
  public static final String JSON_PROPERTY_TAI = "tai";
  @JsonProperty(JSON_PROPERTY_TAI)
  private Tai tai;

  public static final String JSON_PROPERTY_ECGI = "ecgi";
  @JsonProperty(JSON_PROPERTY_ECGI)
  private Ecgi ecgi;

  public static final String JSON_PROPERTY_AGE_OF_LOCATION_INFORMATION = "ageOfLocationInformation";
  @JsonProperty(JSON_PROPERTY_AGE_OF_LOCATION_INFORMATION)
  private Integer ageOfLocationInformation;

  public static final String JSON_PROPERTY_UE_LOCATION_TIMESTAMP = "ueLocationTimestamp";
  @JsonProperty(JSON_PROPERTY_UE_LOCATION_TIMESTAMP)
  private Date ueLocationTimestamp;

  public static final String JSON_PROPERTY_GEOGRAPHICAL_INFORMATION = "geographicalInformation";
  @JsonProperty(JSON_PROPERTY_GEOGRAPHICAL_INFORMATION)
  private String geographicalInformation;

  public static final String JSON_PROPERTY_GEODETIC_INFORMATION = "geodeticInformation";
  @JsonProperty(JSON_PROPERTY_GEODETIC_INFORMATION)
  private String geodeticInformation;

  public static final String JSON_PROPERTY_GLOBAL_NGENB_ID = "globalNgenbId";
  @JsonProperty(JSON_PROPERTY_GLOBAL_NGENB_ID)
  private GlobalRanNodeId globalNgenbId;

  public EutraLocation tai(Tai tai) {
    this.tai = tai;
    return this;
  }

  /**
   * Get tai
   * @return tai
   **/
  @JsonProperty(value = "tai")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public Tai getTai() {
    return tai;
  }

  public void setTai(Tai tai) {
    this.tai = tai;
  }

  public EutraLocation ecgi(Ecgi ecgi) {
    this.ecgi = ecgi;
    return this;
  }

  /**
   * Get ecgi
   * @return ecgi
   **/
  @JsonProperty(value = "ecgi")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public Ecgi getEcgi() {
    return ecgi;
  }

  public void setEcgi(Ecgi ecgi) {
    this.ecgi = ecgi;
  }

  public EutraLocation ageOfLocationInformation(Integer ageOfLocationInformation) {
    this.ageOfLocationInformation = ageOfLocationInformation;
    return this;
  }

  /**
   * Get ageOfLocationInformation
   * minimum: 0
   * maximum: 32767
   * @return ageOfLocationInformation
   **/
  @JsonProperty(value = "ageOfLocationInformation")
  @ApiModelProperty(value = "")
   @Min(0) @Max(32767)
  public Integer getAgeOfLocationInformation() {
    return ageOfLocationInformation;
  }

  public void setAgeOfLocationInformation(Integer ageOfLocationInformation) {
    this.ageOfLocationInformation = ageOfLocationInformation;
  }

  public EutraLocation ueLocationTimestamp(Date ueLocationTimestamp) {
    this.ueLocationTimestamp = ueLocationTimestamp;
    return this;
  }

  /**
   * Get ueLocationTimestamp
   * @return ueLocationTimestamp
   **/
  @JsonProperty(value = "ueLocationTimestamp")
  @ApiModelProperty(value = "")
  
  public Date getUeLocationTimestamp() {
    return ueLocationTimestamp;
  }

  public void setUeLocationTimestamp(Date ueLocationTimestamp) {
    this.ueLocationTimestamp = ueLocationTimestamp;
  }

  public EutraLocation geographicalInformation(String geographicalInformation) {
    this.geographicalInformation = geographicalInformation;
    return this;
  }

  /**
   * Get geographicalInformation
   * @return geographicalInformation
   **/
  @JsonProperty(value = "geographicalInformation")
  @ApiModelProperty(value = "")
   @Pattern(regexp="^[0-9A-F]{16}$")
  public String getGeographicalInformation() {
    return geographicalInformation;
  }

  public void setGeographicalInformation(String geographicalInformation) {
    this.geographicalInformation = geographicalInformation;
  }

  public EutraLocation geodeticInformation(String geodeticInformation) {
    this.geodeticInformation = geodeticInformation;
    return this;
  }

  /**
   * Get geodeticInformation
   * @return geodeticInformation
   **/
  @JsonProperty(value = "geodeticInformation")
  @ApiModelProperty(value = "")
   @Pattern(regexp="^[0-9A-F]{20}$")
  public String getGeodeticInformation() {
    return geodeticInformation;
  }

  public void setGeodeticInformation(String geodeticInformation) {
    this.geodeticInformation = geodeticInformation;
  }

  public EutraLocation globalNgenbId(GlobalRanNodeId globalNgenbId) {
    this.globalNgenbId = globalNgenbId;
    return this;
  }

  /**
   * Get globalNgenbId
   * @return globalNgenbId
   **/
  @JsonProperty(value = "globalNgenbId")
  @ApiModelProperty(value = "")
  @Valid 
  public GlobalRanNodeId getGlobalNgenbId() {
    return globalNgenbId;
  }

  public void setGlobalNgenbId(GlobalRanNodeId globalNgenbId) {
    this.globalNgenbId = globalNgenbId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EutraLocation eutraLocation = (EutraLocation) o;
    return Objects.equals(this.tai, eutraLocation.tai) &&
        Objects.equals(this.ecgi, eutraLocation.ecgi) &&
        Objects.equals(this.ageOfLocationInformation, eutraLocation.ageOfLocationInformation) &&
        Objects.equals(this.ueLocationTimestamp, eutraLocation.ueLocationTimestamp) &&
        Objects.equals(this.geographicalInformation, eutraLocation.geographicalInformation) &&
        Objects.equals(this.geodeticInformation, eutraLocation.geodeticInformation) &&
        Objects.equals(this.globalNgenbId, eutraLocation.globalNgenbId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tai, ecgi, ageOfLocationInformation, ueLocationTimestamp, geographicalInformation, geodeticInformation, globalNgenbId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EutraLocation {\n");
    
    sb.append("    tai: ").append(toIndentedString(tai)).append("\n");
    sb.append("    ecgi: ").append(toIndentedString(ecgi)).append("\n");
    sb.append("    ageOfLocationInformation: ").append(toIndentedString(ageOfLocationInformation)).append("\n");
    sb.append("    ueLocationTimestamp: ").append(toIndentedString(ueLocationTimestamp)).append("\n");
    sb.append("    geographicalInformation: ").append(toIndentedString(geographicalInformation)).append("\n");
    sb.append("    geodeticInformation: ").append(toIndentedString(geodeticInformation)).append("\n");
    sb.append("    globalNgenbId: ").append(toIndentedString(globalNgenbId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

