/*
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 3.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.frojasg1.nchf5g.rel16_15_0.openapi.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * NFIdentification
 */
@JsonPropertyOrder({
  NFIdentification.JSON_PROPERTY_N_F_NAME,
  NFIdentification.JSON_PROPERTY_N_F_I_PV4_ADDRESS,
  NFIdentification.JSON_PROPERTY_N_F_I_PV6_ADDRESS,
  NFIdentification.JSON_PROPERTY_N_F_P_L_M_N_I_D,
  NFIdentification.JSON_PROPERTY_NODE_FUNCTIONALITY,
  NFIdentification.JSON_PROPERTY_N_F_FQDN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2024-09-24T14:40:31.217597300+02:00[Europe/Madrid]", comments = "Generator version: 7.7.0")
public class NFIdentification   {
  public static final String JSON_PROPERTY_N_F_NAME = "nFName";
  @JsonProperty(JSON_PROPERTY_N_F_NAME)
  private UUID nFName;

  public static final String JSON_PROPERTY_N_F_I_PV4_ADDRESS = "nFIPv4Address";
  @JsonProperty(JSON_PROPERTY_N_F_I_PV4_ADDRESS)
  private String nFIPv4Address;

  public static final String JSON_PROPERTY_N_F_I_PV6_ADDRESS = "nFIPv6Address";
  @JsonProperty(JSON_PROPERTY_N_F_I_PV6_ADDRESS)
  private Ipv6Addr nFIPv6Address;

  public static final String JSON_PROPERTY_N_F_P_L_M_N_I_D = "nFPLMNID";
  @JsonProperty(JSON_PROPERTY_N_F_P_L_M_N_I_D)
  private PlmnId nFPLMNID;

  public static final String JSON_PROPERTY_NODE_FUNCTIONALITY = "nodeFunctionality";
  @JsonProperty(JSON_PROPERTY_NODE_FUNCTIONALITY)
  private NodeFunctionality nodeFunctionality;

  public static final String JSON_PROPERTY_N_F_FQDN = "nFFqdn";
  @JsonProperty(JSON_PROPERTY_N_F_FQDN)
  private String nFFqdn;

  public NFIdentification nFName(UUID nFName) {
    this.nFName = nFName;
    return this;
  }

  /**
   * Get nFName
   * @return nFName
   **/
  @JsonProperty(value = "nFName")
  @ApiModelProperty(value = "")
  
  public UUID getnFName() {
    return nFName;
  }

  public void setnFName(UUID nFName) {
    this.nFName = nFName;
  }

  public NFIdentification nFIPv4Address(String nFIPv4Address) {
    this.nFIPv4Address = nFIPv4Address;
    return this;
  }

  /**
   * Get nFIPv4Address
   * @return nFIPv4Address
   **/
  @JsonProperty(value = "nFIPv4Address")
  @ApiModelProperty(example = "198.51.100.1", value = "")
   @Pattern(regexp="^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$")
  public String getnFIPv4Address() {
    return nFIPv4Address;
  }

  public void setnFIPv4Address(String nFIPv4Address) {
    this.nFIPv4Address = nFIPv4Address;
  }

  public NFIdentification nFIPv6Address(Ipv6Addr nFIPv6Address) {
    this.nFIPv6Address = nFIPv6Address;
    return this;
  }

  /**
   * Get nFIPv6Address
   * @return nFIPv6Address
   **/
  @JsonProperty(value = "nFIPv6Address")
  @ApiModelProperty(value = "")
  @Valid 
  public Ipv6Addr getnFIPv6Address() {
    return nFIPv6Address;
  }

  public void setnFIPv6Address(Ipv6Addr nFIPv6Address) {
    this.nFIPv6Address = nFIPv6Address;
  }

  public NFIdentification nFPLMNID(PlmnId nFPLMNID) {
    this.nFPLMNID = nFPLMNID;
    return this;
  }

  /**
   * Get nFPLMNID
   * @return nFPLMNID
   **/
  @JsonProperty(value = "nFPLMNID")
  @ApiModelProperty(value = "")
  @Valid 
  public PlmnId getnFPLMNID() {
    return nFPLMNID;
  }

  public void setnFPLMNID(PlmnId nFPLMNID) {
    this.nFPLMNID = nFPLMNID;
  }

  public NFIdentification nodeFunctionality(NodeFunctionality nodeFunctionality) {
    this.nodeFunctionality = nodeFunctionality;
    return this;
  }

  /**
   * Get nodeFunctionality
   * @return nodeFunctionality
   **/
  @JsonProperty(value = "nodeFunctionality")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public NodeFunctionality getNodeFunctionality() {
    return nodeFunctionality;
  }

  public void setNodeFunctionality(NodeFunctionality nodeFunctionality) {
    this.nodeFunctionality = nodeFunctionality;
  }

  public NFIdentification nFFqdn(String nFFqdn) {
    this.nFFqdn = nFFqdn;
    return this;
  }

  /**
   * Get nFFqdn
   * @return nFFqdn
   **/
  @JsonProperty(value = "nFFqdn")
  @ApiModelProperty(value = "")
  
  public String getnFFqdn() {
    return nFFqdn;
  }

  public void setnFFqdn(String nFFqdn) {
    this.nFFqdn = nFFqdn;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NFIdentification nfIdentification = (NFIdentification) o;
    return Objects.equals(this.nFName, nfIdentification.nFName) &&
        Objects.equals(this.nFIPv4Address, nfIdentification.nFIPv4Address) &&
        Objects.equals(this.nFIPv6Address, nfIdentification.nFIPv6Address) &&
        Objects.equals(this.nFPLMNID, nfIdentification.nFPLMNID) &&
        Objects.equals(this.nodeFunctionality, nfIdentification.nodeFunctionality) &&
        Objects.equals(this.nFFqdn, nfIdentification.nFFqdn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nFName, nFIPv4Address, nFIPv6Address, nFPLMNID, nodeFunctionality, nFFqdn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NFIdentification {\n");
    
    sb.append("    nFName: ").append(toIndentedString(nFName)).append("\n");
    sb.append("    nFIPv4Address: ").append(toIndentedString(nFIPv4Address)).append("\n");
    sb.append("    nFIPv6Address: ").append(toIndentedString(nFIPv6Address)).append("\n");
    sb.append("    nFPLMNID: ").append(toIndentedString(nFPLMNID)).append("\n");
    sb.append("    nodeFunctionality: ").append(toIndentedString(nodeFunctionality)).append("\n");
    sb.append("    nFFqdn: ").append(toIndentedString(nFFqdn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

