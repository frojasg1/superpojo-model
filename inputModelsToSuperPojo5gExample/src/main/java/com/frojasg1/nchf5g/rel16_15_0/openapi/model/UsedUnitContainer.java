/*
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 3.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.frojasg1.nchf5g.rel16_15_0.openapi.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * UsedUnitContainer
 */
@JsonPropertyOrder({
  UsedUnitContainer.JSON_PROPERTY_SERVICE_ID,
  UsedUnitContainer.JSON_PROPERTY_QUOTA_MANAGEMENT_INDICATOR,
  UsedUnitContainer.JSON_PROPERTY_TRIGGERS,
  UsedUnitContainer.JSON_PROPERTY_TRIGGER_TIMESTAMP,
  UsedUnitContainer.JSON_PROPERTY_TIME,
  UsedUnitContainer.JSON_PROPERTY_TOTAL_VOLUME,
  UsedUnitContainer.JSON_PROPERTY_UPLINK_VOLUME,
  UsedUnitContainer.JSON_PROPERTY_DOWNLINK_VOLUME,
  UsedUnitContainer.JSON_PROPERTY_SERVICE_SPECIFIC_UNITS,
  UsedUnitContainer.JSON_PROPERTY_EVENT_TIME_STAMPS,
  UsedUnitContainer.JSON_PROPERTY_LOCAL_SEQUENCE_NUMBER,
  UsedUnitContainer.JSON_PROPERTY_P_D_U_CONTAINER_INFORMATION,
  UsedUnitContainer.JSON_PROPERTY_N_S_P_A_CONTAINER_INFORMATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2024-09-24T14:40:31.217597300+02:00[Europe/Madrid]", comments = "Generator version: 7.7.0")
public class UsedUnitContainer   {
  public static final String JSON_PROPERTY_SERVICE_ID = "serviceId";
  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  private Integer serviceId;

  public static final String JSON_PROPERTY_QUOTA_MANAGEMENT_INDICATOR = "quotaManagementIndicator";
  @JsonProperty(JSON_PROPERTY_QUOTA_MANAGEMENT_INDICATOR)
  private QuotaManagementIndicator quotaManagementIndicator;

  public static final String JSON_PROPERTY_TRIGGERS = "triggers";
  @JsonProperty(JSON_PROPERTY_TRIGGERS)
  private List<@Valid Trigger> triggers;

  public static final String JSON_PROPERTY_TRIGGER_TIMESTAMP = "triggerTimestamp";
  @JsonProperty(JSON_PROPERTY_TRIGGER_TIMESTAMP)
  private Date triggerTimestamp;

  public static final String JSON_PROPERTY_TIME = "time";
  @JsonProperty(JSON_PROPERTY_TIME)
  private Integer time;

  public static final String JSON_PROPERTY_TOTAL_VOLUME = "totalVolume";
  @JsonProperty(JSON_PROPERTY_TOTAL_VOLUME)
  private Long totalVolume;

  public static final String JSON_PROPERTY_UPLINK_VOLUME = "uplinkVolume";
  @JsonProperty(JSON_PROPERTY_UPLINK_VOLUME)
  private Long uplinkVolume;

  public static final String JSON_PROPERTY_DOWNLINK_VOLUME = "downlinkVolume";
  @JsonProperty(JSON_PROPERTY_DOWNLINK_VOLUME)
  private Long downlinkVolume;

  public static final String JSON_PROPERTY_SERVICE_SPECIFIC_UNITS = "serviceSpecificUnits";
  @JsonProperty(JSON_PROPERTY_SERVICE_SPECIFIC_UNITS)
  private Long serviceSpecificUnits;

  public static final String JSON_PROPERTY_EVENT_TIME_STAMPS = "eventTimeStamps";
  @JsonProperty(JSON_PROPERTY_EVENT_TIME_STAMPS)
  private List<Date> eventTimeStamps;

  public static final String JSON_PROPERTY_LOCAL_SEQUENCE_NUMBER = "localSequenceNumber";
  @JsonProperty(JSON_PROPERTY_LOCAL_SEQUENCE_NUMBER)
  private Integer localSequenceNumber;

  public static final String JSON_PROPERTY_P_D_U_CONTAINER_INFORMATION = "pDUContainerInformation";
  @JsonProperty(JSON_PROPERTY_P_D_U_CONTAINER_INFORMATION)
  private PDUContainerInformation pDUContainerInformation;

  public static final String JSON_PROPERTY_N_S_P_A_CONTAINER_INFORMATION = "nSPAContainerInformation";
  @JsonProperty(JSON_PROPERTY_N_S_P_A_CONTAINER_INFORMATION)
  private NSPAContainerInformation nSPAContainerInformation;

  public UsedUnitContainer serviceId(Integer serviceId) {
    this.serviceId = serviceId;
    return this;
  }

  /**
   * Get serviceId
   * minimum: 0
   * maximum: 4294967295
   * @return serviceId
   **/
  @JsonProperty(value = "serviceId")
  @ApiModelProperty(value = "")
   @Min(0) @Max(4294967295L)
  public Integer getServiceId() {
    return serviceId;
  }

  public void setServiceId(Integer serviceId) {
    this.serviceId = serviceId;
  }

  public UsedUnitContainer quotaManagementIndicator(QuotaManagementIndicator quotaManagementIndicator) {
    this.quotaManagementIndicator = quotaManagementIndicator;
    return this;
  }

  /**
   * Get quotaManagementIndicator
   * @return quotaManagementIndicator
   **/
  @JsonProperty(value = "quotaManagementIndicator")
  @ApiModelProperty(value = "")
  
  public QuotaManagementIndicator getQuotaManagementIndicator() {
    return quotaManagementIndicator;
  }

  public void setQuotaManagementIndicator(QuotaManagementIndicator quotaManagementIndicator) {
    this.quotaManagementIndicator = quotaManagementIndicator;
  }

  public UsedUnitContainer triggers(List<@Valid Trigger> triggers) {
    this.triggers = triggers;
    return this;
  }

  public UsedUnitContainer addTriggersItem(Trigger triggersItem) {
    if (this.triggers == null) {
      this.triggers = new ArrayList<>();
    }
    this.triggers.add(triggersItem);
    return this;
  }

  /**
   * Get triggers
   * @return triggers
   **/
  @JsonProperty(value = "triggers")
  @ApiModelProperty(value = "")
  @Valid  @Size(min=0)
  public List<@Valid Trigger> getTriggers() {
    return triggers;
  }

  public void setTriggers(List<@Valid Trigger> triggers) {
    this.triggers = triggers;
  }

  public UsedUnitContainer triggerTimestamp(Date triggerTimestamp) {
    this.triggerTimestamp = triggerTimestamp;
    return this;
  }

  /**
   * Get triggerTimestamp
   * @return triggerTimestamp
   **/
  @JsonProperty(value = "triggerTimestamp")
  @ApiModelProperty(value = "")
  
  public Date getTriggerTimestamp() {
    return triggerTimestamp;
  }

  public void setTriggerTimestamp(Date triggerTimestamp) {
    this.triggerTimestamp = triggerTimestamp;
  }

  public UsedUnitContainer time(Integer time) {
    this.time = time;
    return this;
  }

  /**
   * Get time
   * minimum: 0
   * maximum: 4294967295
   * @return time
   **/
  @JsonProperty(value = "time")
  @ApiModelProperty(value = "")
   @Min(0) @Max(4294967295L)
  public Integer getTime() {
    return time;
  }

  public void setTime(Integer time) {
    this.time = time;
  }

  public UsedUnitContainer totalVolume(Long totalVolume) {
    this.totalVolume = totalVolume;
    return this;
  }

  /**
   * Get totalVolume
   * minimum: 0
   * @return totalVolume
   **/
  @JsonProperty(value = "totalVolume")
  @ApiModelProperty(value = "")
   @Min(0L)
  public Long getTotalVolume() {
    return totalVolume;
  }

  public void setTotalVolume(Long totalVolume) {
    this.totalVolume = totalVolume;
  }

  public UsedUnitContainer uplinkVolume(Long uplinkVolume) {
    this.uplinkVolume = uplinkVolume;
    return this;
  }

  /**
   * Get uplinkVolume
   * minimum: 0
   * @return uplinkVolume
   **/
  @JsonProperty(value = "uplinkVolume")
  @ApiModelProperty(value = "")
   @Min(0L)
  public Long getUplinkVolume() {
    return uplinkVolume;
  }

  public void setUplinkVolume(Long uplinkVolume) {
    this.uplinkVolume = uplinkVolume;
  }

  public UsedUnitContainer downlinkVolume(Long downlinkVolume) {
    this.downlinkVolume = downlinkVolume;
    return this;
  }

  /**
   * Get downlinkVolume
   * minimum: 0
   * @return downlinkVolume
   **/
  @JsonProperty(value = "downlinkVolume")
  @ApiModelProperty(value = "")
   @Min(0L)
  public Long getDownlinkVolume() {
    return downlinkVolume;
  }

  public void setDownlinkVolume(Long downlinkVolume) {
    this.downlinkVolume = downlinkVolume;
  }

  public UsedUnitContainer serviceSpecificUnits(Long serviceSpecificUnits) {
    this.serviceSpecificUnits = serviceSpecificUnits;
    return this;
  }

  /**
   * Get serviceSpecificUnits
   * minimum: 0
   * @return serviceSpecificUnits
   **/
  @JsonProperty(value = "serviceSpecificUnits")
  @ApiModelProperty(value = "")
   @Min(0L)
  public Long getServiceSpecificUnits() {
    return serviceSpecificUnits;
  }

  public void setServiceSpecificUnits(Long serviceSpecificUnits) {
    this.serviceSpecificUnits = serviceSpecificUnits;
  }

  public UsedUnitContainer eventTimeStamps(List<Date> eventTimeStamps) {
    this.eventTimeStamps = eventTimeStamps;
    return this;
  }

  public UsedUnitContainer addEventTimeStampsItem(Date eventTimeStampsItem) {
    if (this.eventTimeStamps == null) {
      this.eventTimeStamps = new ArrayList<>();
    }
    this.eventTimeStamps.add(eventTimeStampsItem);
    return this;
  }

  /**
   * Get eventTimeStamps
   * @return eventTimeStamps
   **/
  @JsonProperty(value = "eventTimeStamps")
  @ApiModelProperty(value = "")
   @Size(min=0)
  public List<Date> getEventTimeStamps() {
    return eventTimeStamps;
  }

  public void setEventTimeStamps(List<Date> eventTimeStamps) {
    this.eventTimeStamps = eventTimeStamps;
  }

  public UsedUnitContainer localSequenceNumber(Integer localSequenceNumber) {
    this.localSequenceNumber = localSequenceNumber;
    return this;
  }

  /**
   * Get localSequenceNumber
   * @return localSequenceNumber
   **/
  @JsonProperty(value = "localSequenceNumber")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public Integer getLocalSequenceNumber() {
    return localSequenceNumber;
  }

  public void setLocalSequenceNumber(Integer localSequenceNumber) {
    this.localSequenceNumber = localSequenceNumber;
  }

  public UsedUnitContainer pDUContainerInformation(PDUContainerInformation pDUContainerInformation) {
    this.pDUContainerInformation = pDUContainerInformation;
    return this;
  }

  /**
   * Get pDUContainerInformation
   * @return pDUContainerInformation
   **/
  @JsonProperty(value = "pDUContainerInformation")
  @ApiModelProperty(value = "")
  @Valid 
  public PDUContainerInformation getpDUContainerInformation() {
    return pDUContainerInformation;
  }

  public void setpDUContainerInformation(PDUContainerInformation pDUContainerInformation) {
    this.pDUContainerInformation = pDUContainerInformation;
  }

  public UsedUnitContainer nSPAContainerInformation(NSPAContainerInformation nSPAContainerInformation) {
    this.nSPAContainerInformation = nSPAContainerInformation;
    return this;
  }

  /**
   * Get nSPAContainerInformation
   * @return nSPAContainerInformation
   **/
  @JsonProperty(value = "nSPAContainerInformation")
  @ApiModelProperty(value = "")
  @Valid 
  public NSPAContainerInformation getnSPAContainerInformation() {
    return nSPAContainerInformation;
  }

  public void setnSPAContainerInformation(NSPAContainerInformation nSPAContainerInformation) {
    this.nSPAContainerInformation = nSPAContainerInformation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsedUnitContainer usedUnitContainer = (UsedUnitContainer) o;
    return Objects.equals(this.serviceId, usedUnitContainer.serviceId) &&
        Objects.equals(this.quotaManagementIndicator, usedUnitContainer.quotaManagementIndicator) &&
        Objects.equals(this.triggers, usedUnitContainer.triggers) &&
        Objects.equals(this.triggerTimestamp, usedUnitContainer.triggerTimestamp) &&
        Objects.equals(this.time, usedUnitContainer.time) &&
        Objects.equals(this.totalVolume, usedUnitContainer.totalVolume) &&
        Objects.equals(this.uplinkVolume, usedUnitContainer.uplinkVolume) &&
        Objects.equals(this.downlinkVolume, usedUnitContainer.downlinkVolume) &&
        Objects.equals(this.serviceSpecificUnits, usedUnitContainer.serviceSpecificUnits) &&
        Objects.equals(this.eventTimeStamps, usedUnitContainer.eventTimeStamps) &&
        Objects.equals(this.localSequenceNumber, usedUnitContainer.localSequenceNumber) &&
        Objects.equals(this.pDUContainerInformation, usedUnitContainer.pDUContainerInformation) &&
        Objects.equals(this.nSPAContainerInformation, usedUnitContainer.nSPAContainerInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceId, quotaManagementIndicator, triggers, triggerTimestamp, time, totalVolume, uplinkVolume, downlinkVolume, serviceSpecificUnits, eventTimeStamps, localSequenceNumber, pDUContainerInformation, nSPAContainerInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsedUnitContainer {\n");
    
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    quotaManagementIndicator: ").append(toIndentedString(quotaManagementIndicator)).append("\n");
    sb.append("    triggers: ").append(toIndentedString(triggers)).append("\n");
    sb.append("    triggerTimestamp: ").append(toIndentedString(triggerTimestamp)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    totalVolume: ").append(toIndentedString(totalVolume)).append("\n");
    sb.append("    uplinkVolume: ").append(toIndentedString(uplinkVolume)).append("\n");
    sb.append("    downlinkVolume: ").append(toIndentedString(downlinkVolume)).append("\n");
    sb.append("    serviceSpecificUnits: ").append(toIndentedString(serviceSpecificUnits)).append("\n");
    sb.append("    eventTimeStamps: ").append(toIndentedString(eventTimeStamps)).append("\n");
    sb.append("    localSequenceNumber: ").append(toIndentedString(localSequenceNumber)).append("\n");
    sb.append("    pDUContainerInformation: ").append(toIndentedString(pDUContainerInformation)).append("\n");
    sb.append("    nSPAContainerInformation: ").append(toIndentedString(nSPAContainerInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

