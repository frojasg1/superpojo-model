/*
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 3.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.frojasg1.nchf5g.rel16_15_0.openapi.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * UtraLocation
 */
@JsonPropertyOrder({
  UtraLocation.JSON_PROPERTY_CGI,
  UtraLocation.JSON_PROPERTY_SAI,
  UtraLocation.JSON_PROPERTY_LAI,
  UtraLocation.JSON_PROPERTY_RAI,
  UtraLocation.JSON_PROPERTY_AGE_OF_LOCATION_INFORMATION,
  UtraLocation.JSON_PROPERTY_UE_LOCATION_TIMESTAMP,
  UtraLocation.JSON_PROPERTY_GEOGRAPHICAL_INFORMATION,
  UtraLocation.JSON_PROPERTY_GEODETIC_INFORMATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2024-09-24T14:40:31.217597300+02:00[Europe/Madrid]", comments = "Generator version: 7.7.0")
public class UtraLocation   {
  public static final String JSON_PROPERTY_CGI = "cgi";
  @JsonProperty(JSON_PROPERTY_CGI)
  private CellGlobalId cgi;

  public static final String JSON_PROPERTY_SAI = "sai";
  @JsonProperty(JSON_PROPERTY_SAI)
  private ServiceAreaId sai;

  public static final String JSON_PROPERTY_LAI = "lai";
  @JsonProperty(JSON_PROPERTY_LAI)
  private LocationAreaId lai;

  public static final String JSON_PROPERTY_RAI = "rai";
  @JsonProperty(JSON_PROPERTY_RAI)
  private RoutingAreaId rai;

  public static final String JSON_PROPERTY_AGE_OF_LOCATION_INFORMATION = "ageOfLocationInformation";
  @JsonProperty(JSON_PROPERTY_AGE_OF_LOCATION_INFORMATION)
  private Integer ageOfLocationInformation;

  public static final String JSON_PROPERTY_UE_LOCATION_TIMESTAMP = "ueLocationTimestamp";
  @JsonProperty(JSON_PROPERTY_UE_LOCATION_TIMESTAMP)
  private Date ueLocationTimestamp;

  public static final String JSON_PROPERTY_GEOGRAPHICAL_INFORMATION = "geographicalInformation";
  @JsonProperty(JSON_PROPERTY_GEOGRAPHICAL_INFORMATION)
  private String geographicalInformation;

  public static final String JSON_PROPERTY_GEODETIC_INFORMATION = "geodeticInformation";
  @JsonProperty(JSON_PROPERTY_GEODETIC_INFORMATION)
  private String geodeticInformation;

  public UtraLocation cgi(CellGlobalId cgi) {
    this.cgi = cgi;
    return this;
  }

  /**
   * Get cgi
   * @return cgi
   **/
  @JsonProperty(value = "cgi")
  @ApiModelProperty(value = "")
  @Valid 
  public CellGlobalId getCgi() {
    return cgi;
  }

  public void setCgi(CellGlobalId cgi) {
    this.cgi = cgi;
  }

  public UtraLocation sai(ServiceAreaId sai) {
    this.sai = sai;
    return this;
  }

  /**
   * Get sai
   * @return sai
   **/
  @JsonProperty(value = "sai")
  @ApiModelProperty(value = "")
  @Valid 
  public ServiceAreaId getSai() {
    return sai;
  }

  public void setSai(ServiceAreaId sai) {
    this.sai = sai;
  }

  public UtraLocation lai(LocationAreaId lai) {
    this.lai = lai;
    return this;
  }

  /**
   * Get lai
   * @return lai
   **/
  @JsonProperty(value = "lai")
  @ApiModelProperty(value = "")
  @Valid 
  public LocationAreaId getLai() {
    return lai;
  }

  public void setLai(LocationAreaId lai) {
    this.lai = lai;
  }

  public UtraLocation rai(RoutingAreaId rai) {
    this.rai = rai;
    return this;
  }

  /**
   * Get rai
   * @return rai
   **/
  @JsonProperty(value = "rai")
  @ApiModelProperty(value = "")
  @Valid 
  public RoutingAreaId getRai() {
    return rai;
  }

  public void setRai(RoutingAreaId rai) {
    this.rai = rai;
  }

  public UtraLocation ageOfLocationInformation(Integer ageOfLocationInformation) {
    this.ageOfLocationInformation = ageOfLocationInformation;
    return this;
  }

  /**
   * Get ageOfLocationInformation
   * minimum: 0
   * maximum: 32767
   * @return ageOfLocationInformation
   **/
  @JsonProperty(value = "ageOfLocationInformation")
  @ApiModelProperty(value = "")
   @Min(0) @Max(32767)
  public Integer getAgeOfLocationInformation() {
    return ageOfLocationInformation;
  }

  public void setAgeOfLocationInformation(Integer ageOfLocationInformation) {
    this.ageOfLocationInformation = ageOfLocationInformation;
  }

  public UtraLocation ueLocationTimestamp(Date ueLocationTimestamp) {
    this.ueLocationTimestamp = ueLocationTimestamp;
    return this;
  }

  /**
   * Get ueLocationTimestamp
   * @return ueLocationTimestamp
   **/
  @JsonProperty(value = "ueLocationTimestamp")
  @ApiModelProperty(value = "")
  
  public Date getUeLocationTimestamp() {
    return ueLocationTimestamp;
  }

  public void setUeLocationTimestamp(Date ueLocationTimestamp) {
    this.ueLocationTimestamp = ueLocationTimestamp;
  }

  public UtraLocation geographicalInformation(String geographicalInformation) {
    this.geographicalInformation = geographicalInformation;
    return this;
  }

  /**
   * Get geographicalInformation
   * @return geographicalInformation
   **/
  @JsonProperty(value = "geographicalInformation")
  @ApiModelProperty(value = "")
   @Pattern(regexp="^[0-9A-F]{16}$")
  public String getGeographicalInformation() {
    return geographicalInformation;
  }

  public void setGeographicalInformation(String geographicalInformation) {
    this.geographicalInformation = geographicalInformation;
  }

  public UtraLocation geodeticInformation(String geodeticInformation) {
    this.geodeticInformation = geodeticInformation;
    return this;
  }

  /**
   * Get geodeticInformation
   * @return geodeticInformation
   **/
  @JsonProperty(value = "geodeticInformation")
  @ApiModelProperty(value = "")
   @Pattern(regexp="^[0-9A-F]{20}$")
  public String getGeodeticInformation() {
    return geodeticInformation;
  }

  public void setGeodeticInformation(String geodeticInformation) {
    this.geodeticInformation = geodeticInformation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UtraLocation utraLocation = (UtraLocation) o;
    return Objects.equals(this.cgi, utraLocation.cgi) &&
        Objects.equals(this.sai, utraLocation.sai) &&
        Objects.equals(this.lai, utraLocation.lai) &&
        Objects.equals(this.rai, utraLocation.rai) &&
        Objects.equals(this.ageOfLocationInformation, utraLocation.ageOfLocationInformation) &&
        Objects.equals(this.ueLocationTimestamp, utraLocation.ueLocationTimestamp) &&
        Objects.equals(this.geographicalInformation, utraLocation.geographicalInformation) &&
        Objects.equals(this.geodeticInformation, utraLocation.geodeticInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cgi, sai, lai, rai, ageOfLocationInformation, ueLocationTimestamp, geographicalInformation, geodeticInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UtraLocation {\n");
    
    sb.append("    cgi: ").append(toIndentedString(cgi)).append("\n");
    sb.append("    sai: ").append(toIndentedString(sai)).append("\n");
    sb.append("    lai: ").append(toIndentedString(lai)).append("\n");
    sb.append("    rai: ").append(toIndentedString(rai)).append("\n");
    sb.append("    ageOfLocationInformation: ").append(toIndentedString(ageOfLocationInformation)).append("\n");
    sb.append("    ueLocationTimestamp: ").append(toIndentedString(ueLocationTimestamp)).append("\n");
    sb.append("    geographicalInformation: ").append(toIndentedString(geographicalInformation)).append("\n");
    sb.append("    geodeticInformation: ").append(toIndentedString(geodeticInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

